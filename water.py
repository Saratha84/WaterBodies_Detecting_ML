# -*- coding: utf-8 -*-
"""water.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O45woXtSTcPYC9J_7VqvV31lXgtEUig0
"""

!pip install lsdviztools &> /dev/null

import numpy as np
import pandas as pd
import rasterio as rio
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

ds=rio.open(r"/content/drive/MyDrive/Data_/X_train.tif")
ds.read()

arr=ds.read()
arr=np.where(np.isnan(arr),0,arr)
arr=np.moveaxis(arr,0,-1)
arr.shape
X_train=np.reshape(arr,(arr.shape[0]*arr.shape[1],arr.shape[2]))
X_train.shape

ds=rio.open(r"/content/drive/MyDrive/Data_/y_train.tif")
arr=ds.read()
arr=np.where(np.isnan(arr),0,arr)
arr=np.moveaxis(arr,0,-1)
arr.shape
y_train=np.reshape(arr,(arr.shape[0]*arr.shape[1],arr.shape[2]))
y_train.shape

nrow_train=arr[0]
ncol_train=arr[1]

ds.close()

ds=rio.open(r"/content/drive/MyDrive/Data_/X_test.tif")
arr=ds.read()
arr=np.where(np.isnan(arr),0,arr)
arr=np.moveaxis(arr,0,-1)
arr.shape
X_test=np.reshape(arr,(arr.shape[0]*arr.shape[1],arr.shape[2]))
print(X_test.shape)

nrow_train=arr.shape[0]
ncol_train=arr.shape[1]

ds.close()

ds=rio.open(r"/content/drive/MyDrive/Data_/y_test.tif")

arr=ds.read()
arr=np.where(np.isnan(arr),0,arr)
arr=np.moveaxis(arr,0,-1)
arr.shape
y_test=np.reshape(arr,(arr.shape[0]*arr.shape[1],arr.shape[2]))
print(y_test.shape)

nrow_train=arr.shape[0]
ncol_train=arr.shape[1]

ds.close()

from sklearn.ensemble import RandomForestClassifier
rfc=RandomForestClassifier(n_estimators=100,random_state=42,verbose=3,n_jobs=-1)
rfc.fit(X_train,y_train)

y_pred=rfc.predict(X_test)

from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred))

y_pred.shape

y_pred_reshaped=y_pred.reshape(nrow_train,ncol_train)
y_test_reshaped=y_test.reshape(nrow_train,ncol_train)
X_test_reshaped=X_test.reshape(nrow_train,ncol_train,4)
print(y_pred_reshaped.shape,X_test_reshaped.shape)

fig,axes=plt.subplots(nrows=1,ncols=4,sharex=True,sharey=True,figsize=(15,7))
ax1,ax2,ax3,ax4=axes.flatten()

ax1.set_title("RGB",fontweight="bold",fontsize=16)
ax1.imshow(X_test_reshaped[:,:,:3])

ax2.set_title("NRI",fontweight="bold",fontsize=16)
ax2.imshow(X_test_reshaped[:,:,-1])

ax3.set_title("Ground Truth",fontweight="bold",fontsize=16)
ax3.imshow(y_test_reshaped[:,:])

ax4.set_title("Predicted",fontweight="bold",fontsize=16)
ax4.imshow(y_pred_reshaped[:,:])
plt.show()

